#!/usr/bin/bash

# Get devices from bluetoothctl and store device names and MACs
declare -A device_macs
declare -A device_names

# Capture bluetoothctl devices output and parse it
while read -r line; do
    if [[ $line =~ Device\ ([0-9A-F:]+)\ (.*) ]]; then
        mac="${BASH_REMATCH[1]}"
        name="${BASH_REMATCH[2]}"
        device_macs["$name"]="$mac"
        device_names["$mac"]="$name"
    fi
done < <(bluetoothctl devices | sort)

# Create the menu options
link="Connect:"
sp="Internal Speakers"
db="Disconnect Bluetooth"
rs="Restart Pipewire"

# Build options list starting with devices from bluetoothctl
options=""
for name in "${!device_macs[@]}"; do
    options+="$name\n"
done
options+="${sp}\n${db}\n${rs}"

# Show menu with rofi
sel=$(echo -e "$options" | rofi -dmenu -p "${link}")

set_sink_and_notify_listener() {
    sink_name=$1
    echo "$sink_name" > /tmp/current_sink
}

# Function to convert MAC address to sink name format (replacing : with _)
get_sink_name() {
    local mac=$1
    local formatted_mac=${mac//:/_}
    echo "bluez_output.${formatted_mac}.1"
}

# Handle selected option
if [[ -n "${device_macs[$sel]}" ]]; then
    # A bluetooth device was selected
    device_mac="${device_macs[$sel]}"
    sink_name=$(get_sink_name "$device_mac")
    
    echo "Connecting to $sel ($device_mac)"
    sleep 0.2
    bluetoothctl -- connect "$device_mac"
    set_sink_and_notify_listener "$sink_name"
    
elif [ "${sel}" = "$sp" ]; then
    sink_name="alsa_output.pci-0000_68_00.6.HiFi__Speaker__sink"
    set_sink_and_notify_listener "$sink_name"
    
elif [ "${sel}" = "$db" ]; then
    /home/ari/System/scripts/audio/bt-disconnect
    
elif [ "${sel}" = "$rs" ]; then
    systemctl restart --user pipewire.service
fi
